name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        source-url: https://nuget.pkg.github.com/scetrov/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.11
      with:
        versionSpec: '6.0.x'

    - name: Determine Version
      id: version_step # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v3.1.11

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./src
      
    - name: Build
      run: dotnet build --no-restore /p:Version=${{ steps.version_step.outputs.SemVer }}
      working-directory: ./src
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./src

    - name: Pack NuGet Package
      run: dotnet pack --configuration Release --output ./nupkg /p:PackageVersion=${{ steps.version_step.outputs.SemVer }}
      working-directory: ./src/FrontierSharp.MudIndexer

    - name: Publish to GitHub Packages
      run: dotnet nuget push ./nupkg/*.nupkg --source "https://nuget.pkg.github.com/scetrov/index.json" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      working-directory: ./src/FrontierSharp.MudIndexer
        
    - name: Publish to NuGet.org (Optional)
      run: dotnet nuget push ./nupkg/*.nupkg --source "nuget.org" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      working-directory: ./src/FrontierSharp.MudIndexer

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version_step.outputs.SemVer }}
        release_name: Release ${{ steps.version_step.outputs.SemVer }}
        draft: false
        prerelease: false
        body: |
          Release notes for version ${{ steps.version_step.outputs.SemVer }}
